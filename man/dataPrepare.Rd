% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataPrepare.R
\name{dataPrepare}
\alias{dataPrepare}
\title{Data Prepare}
\usage{
dataPrepare(
  file,
  species = "hsapiens",
  most.variables = 0,
  formating = c("quantile", "library", "none"),
  lower = 0,
  upper = 0,
  method.ortho = c("gprofiler", "homologene", "babelgene"),
  write = FALSE,
  verbose = TRUE,
  plot = FALSE
)
}
\arguments{
\item{file}{either a string for the scRNAseq data file or a count matrix}

\item{species}{the species to which the data corresponds}

\item{most.variables}{a number of most variable genes to keep}

\item{formating}{quantile, library (not functionnal yet) or none}

\item{lower}{a number in [0,1], low quantile threshold}

\item{upper}{a number in [0,1], high quantile threshold}

\item{method.ortho}{3 choices are available ('gprofiler','homologene',
'babelgene') gprofiler is set by  default.}

\item{write}{a logical}

\item{verbose}{a logical}

\item{plot}{a logical}
}
\value{
The function returns an object of type SCSRDataModel.
}
\description{
Prepares the data for further analysis
}
\details{
`file` is either the path to the file containing the read or UMI 
count matrix the user wants to analyze or directly the count matrix.

`most.variables` can be set to N to select the Nth most variables genes. 
This option allows the user to use a reduced matrix (N x number of cells) to
perform the clustering step faster.

`lower` and `upper` are used to remove the genes whose average counts are 
outliers. The values of these arguments are fractions of the total number of 
genes and hence must be between 0 and 1. Namely, if `lower = 0.05`, then the 
function removes the 5% less expressed genes and if `upper = 0.05`, then the 
function removes the 5% most expressed genes.

If `write` is TRUE, then the function writes two text files. One for the
normalized and gene thresholded read counts table and another one for the
genes that passed the lower and upper threshold. Note that the length of the
genes vector written in the *genes.txt* file is equal to the number of rows
of the table of read counts written in the *data.txt* file.
}
\examples{
message('dataPrepare')
data <- matrix(runif(1000,0,1),nrow=50,ncol=20)
rownames(data) <- paste('gene',seq_len(50))
obj <- dataPrepare(data)
}
